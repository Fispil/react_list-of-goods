{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","reverse","setState","sortAlphabetically","sortByLength","sortByDefault","this","visibleGoods","goods","console","log","sort","firstGood","secondGood","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEI,mBAAqB,WACnB,EAAKD,SAAS,CAAEF,SAAU,KAb9B,EAgBEI,aAAe,WACb,EAAKF,SAAS,CAAEF,SAAU,KAjB9B,EAoBEK,cAAgB,WACd,EAAKH,SAAS,CAAEF,SAAU,IAC1B,EAAKE,SAAS,CAAEH,YAAY,KAtBhC,4CAyBE,WACE,MAAiCO,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdO,EA5DH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAoBzB,OAjBAC,QAAQC,IAAIV,EAAUD,GAEtBQ,EAAaI,MAAK,SAACC,EAAWC,GAC5B,OAAQb,GACN,KAAK,EACH,OAAOY,EAAUE,cAAcD,GACjC,KAAK,EACH,OAAOD,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAIThB,GACFQ,EAAaN,UAGRM,EAoCgBS,CACnBpB,EAAiB,CAAEG,aAAYC,aAGjC,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,SACT,UACA,CAAE,WAAyB,IAAbnB,IAElBoB,QAASd,KAAKH,mBAPhB,iCAYA,wBACEe,KAAK,SACLD,UACEE,IAAW,SACT,aACA,CAAE,WAAyB,IAAbnB,IAElBoB,QAASd,KAAKF,aAPhB,4BAYA,wBACEc,KAAK,SACLD,UACEE,IAAW,SACT,aACA,CAAE,YAAapB,IAEnBqB,QAASd,KAAKL,QAPhB,sBAYEF,GAA2B,IAAbC,IACd,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,cAHhB,sBAUJ,6BACE,6BACGE,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBArFtC,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5816045a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case 1:\n        return firstGood.localeCompare(secondGood);\n      case 2:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  sortByDefault = () => {\n    this.setState({ sortType: 0 });\n    this.setState({ isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames('button',\n                'is-info',\n                { 'is-light': sortType !== 1 })\n            }\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button',\n                'is-success',\n                { 'is-light': sortType !== 2 })\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button',\n                'is-warning',\n                { 'is-light': !isReversed })\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== 0) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.sortByDefault}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}